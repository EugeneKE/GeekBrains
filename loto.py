
"""
== Лото ==

Правила игры в лото.

Игра ведется с помощью специальных карточек, на которых отмечены числа, 
и фишек (бочонков) с цифрами.

Количество бочонков — 90 штук (с цифрами от 1 до 90).

Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр, 
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:

--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86 
--------------------------

В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается 
случайная карточка. 

Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.

Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.
	
Побеждает тот, кто первый закроет все числа на своей карточке.

Пример одного хода:

Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71   
--------------------------
-- Карточка компьютера ---
 7 11     - 14    87      
      16 49    55 77    88    
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)

Подсказка: каждый следующий случайный бочонок из мешка удобно получать 
с помощью функции-генератора.

Подсказка: для работы с псевдослучайными числами удобно использовать 
модуль random: http://docs.python.org/3/library/random.html

"""


__autor_ = 'Кувалдин Е.А.'

"""
== Лото ==

Правила игры в лото.

Игра ведется с помощью специальных карточек, на которых отмечены числа, 
и фишек (бочонков) с цифрами.

Количество бочонков — 90 штук (с цифрами от 1 до 90).

Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр, 
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:

--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86 
--------------------------

В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается 
случайная карточка. 

Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.

Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.

Побеждает тот, кто первый закроет все числа на своей карточке.

Пример одного хода:

Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71   
--------------------------
-- Карточка компьютера ---
 7 11     - 14    87      
      16 49    55 77    88    
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)

Подсказка: каждый следующий случайный бочонок из мешка удобно получать 
с помощью функции-генератора.

Подсказка: для работы с псевдослучайными числами удобно использовать 
модуль random: http://docs.python.org/3/library/random.html

"""
import random

class Card:
	def __init__(self, lottery):
		self.lottery = lottery

	def ran_num():
		num =[]
		for i in range(1, 36):
			ranNum = random.randint(1, 90)
			if ranNum in num:
				pass
			else:
				num.append(ranNum)
		num.sort()
		return num

	def insert_s(vol):

		for i in range(5):
			for n in range(9):
				s_gen = random.randint(1, 9)
				vol.insert(s_gen, 'S')
		return vol
		"""""
		разбиваем строку на пять рядов по 9 

		"""""
	def row_maker(vol):
		w, y = [], []
		n=0
		for i in vol:
			n += 1
			w.append(i)
			if n == 9:
				y.append(w)
				w = []
				n = 0
		return y

	def empty_maker(vol):
		em_s =[]
		i = 4
		while i > 0:
			empty_spel = random.randint(0, 8)
			if empty_spel in em_s:
				pass
			else:
				em_s.append(empty_spel)
				i -= 1
		return em_s

	def ready_lottery_seg( lotery, emty_side):

		for i in emty_side:

				lotery.pop(i)
				lotery.insert(i,'')


		return lotery

	def ReadyLottery(lottery):

		readyLottery = []

		for i in lottery:
			qw = Card.empty_maker(i)
			sd = Card.ready_lottery_seg(i, qw)
			readyLottery.append(sd)
		return readyLottery

def readyL(volum):
	readyLottery = []
	for i in volum:
		qw = Card.empty_maker(i)
		sd = Card.ready_lottery_seg(i, qw)
		readyLottery.append(sd)
	return readyLottery

def print_card(card):
	for i in card:
		print(i)

def cube(volume):
	n = 1
	rn = random.randint(1, 90)
	while n > 0:
		if rn in volume:
			pass
		else:
			volume.append(rn)
			n -= 1
		return rn

def answer(num, lotery):

	answ = str(input())

	if answ == 'Y':

		if num in lotery:

			pos = lotery.index(num)
			lotery.insert(pos, '-')

		else:
			print('К сожалению, вы ошиблись и проиграли')
	else:
		pass

	return lotery




# Все выпавшие кубики
all_random_choise =[]

# Создаем карту для игрока
a = Card.ran_num()
q = Card.row_maker(a)
playerLottery =readyL(q)

# Создаем карту для компьютера
t = Card.ran_num()
z = Card.row_maker(t)
compLottery = readyL(z)

while True:

	# Выводим результат на экран
	print('Лотерейная карта компьютера')
	print_card(compLottery)
	print()
	print()
	print('Лотерейная карта игрока')
	print_card(playerLottery)

# Геренерируем вытягивание боченка
	randchios =cube(all_random_choise)
	all_random_choise.append(randchios)
	print()
	print('Выпал боченок с номером {}, закрываем число? Y/N'.format(cube(all_random_choise)))
	playerLottery = answer(all_random_choise[-1], playerLottery)
	print('Все выпашие боченки:', all_random_choise[-1])

